<!-- Make this a strongly typed view of type UserDetails-->
@model Robno.Models.Auth.UserDetails

@{

    Layout = null;

}

<!DOCTYPE html>

<html>

<head>

    <meta name="viewport" content="width=device-width" />

    <title>Login</title>

    <script src="~/Scripts/jquery-1.8.0.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

</head>

<body>

    <div>

        @Html.ValidationMessage("CredentialError", new { style = "color:red;" })
        @using (Html.BeginForm("DoLogin", "Authentication", FormMethod.Post))

        {

            @Html.LabelFor(c => c.UserName)

            @Html.TextBoxFor(x => x.UserName)

            @Html.ValidationMessageFor(x => x.UserName) <!-- This time instead of Html.ValidationMessage we have used Html.ValidationMessageFor. Both will do same thing. 
                                                            Html.ValidationMessageFor can be used only when the view is strongly typed view.-->

            <br />

           <p>Password</p>

            @Html.PasswordFor(x => x.Password)

            <br />


            <input type="submit" name="BtnSubmit" value="Login" />

        }

    </div>

</body>

</html>

